cmake_minimum_required(VERSION 3.0.2)
project(elmo_pkgs)

# appended to the catkin_variables(catkin_INCLUDE_DIRS contains the include paths for this lists)
find_package(catkin REQUIRED COMPONENTS 
 roscpp
 std_msgs
 soem
 message_generation
)

catkin_package(
  INCLUDE_DIRS include   # "include" folder 
#  LIBRARIES elmo_pkgs
#  CATKIN_DEPENDS other_catkin_pkg
#  DEPENDS system_lib
)

# *_INCLUDE_DIRS variables generated by find_package calls
## "include" indicates that the "include/" directory within the package is also part of the path
# include paths - where can header files be found for the code being built
# library paths - where are libraries located that executalbe target build against

include_directories(
 include
 ${catkin_INCLUDE_DIRS}
)

#include_directories($ENV{/usr/xenomai/include/alchemy/})
#include_directories($ENV{/usr/xenomai/include/})
#include_directories($ENV{/usr/xenomai/cobalt/})
#include_directories($ENV{/usr/xenomai/boilerplate/})

#execute_process(COMMAND /usr/xenomai/bin/xeno-config --skin=native --cflags OUTPUT_VARIABLE XENO_CFLAGS)
#execute_process(COMMAND /usr/xenomai/bin/xeno-config --skin=native --ldflags OUTPUT_VARIABLE XENO_LDFLAGS)

#execute_process(COMMAND /usr/xenomai/bin/xeno-config --skin=native --cflags OUTPUT_VARIABLE XENO_NATIVE_CFLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
#execute_process(COMMAND /usr/xenomai/bin/xeno-config --skin=native --ldflags OUTPUT_VARIABLE XENO_NATIVE_LDFLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)


# Be used to add additional library paths.(not recommended because CMake packages automatically have their link information added when they are find_packaged)
# link_directories() 

#SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -g -Wall -O3 ${XENO_NATIVE_CFLAGS} -DHAVE_SOCKLEN_T")
SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${XENO_CFLAGS}")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} ${XENO_LDFLAGS}")


# To Set executable file's location to ${PROJECT_SOURCE_DIR}/bin.
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)


# To specify an executable target that must be buillt.
add_executable(elmo_pkgs.exe src/main.cpp src/servo.c src/ecat_dc.c)

#add_definitions(-D_GNU_SOURCE -D_REENTRANT -D__XENO__ -DNO_GPL)

# To specify which libraries an executable target links against.
target_link_libraries(elmo_pkgs.exe ${catkin_LIBRARIES})


