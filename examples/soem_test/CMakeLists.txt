cmake_minimum_required(VERSION 3.0.2)
project(soem_test)

SET(ELMO_PKGS_DIR ${CMAKE_SOURCE_DIR}/PongBotQ_One_Leg)

SET (SRC_FILES 
 main.cpp
 ${ELMO_PKGS_DIR}/src/servo.c
 ${ELMO_PKGS_DIR}/src/ecat_dc.c
 ${ELMO_PKGS_DIR}/include/ethercat/osal/osal.c
 ${ELMO_PKGS_DIR}/include/ethercat/oshw/nicdrv.c
 ${ELMO_PKGS_DIR}/include/ethercat/oshw/oshw.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatbase.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatcoe.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatconfig.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatdc.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatfoe.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatmain.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatprint.c
 ${ELMO_PKGS_DIR}/include/ethercat/soem/ethercatsoe.c
)

LIST(APPEND CMAKE_MODULE_PATH
${PROJECT_SOURCE_DIR}
)



# appended to the catkin_variables(catkin_INCLUDE_DIRS contains the include paths for this lists)
find_package(catkin REQUIRED COMPONENTS 
 roscpp
 std_msgs
 message_generation
)

#catkin_package(
 # INCLUDE_DIRS include   # "include" folder  
  #LIBRARIES elmo_pkgs
  #CATKIN_DEPENDS other_catkin_pkg
  #DEPENDS system_lib
#)


# *_INCLUDE_DIRS variables generated by find_package calls
## "include" indicates that the "include/" directory within the package is also part of the path
# include paths - where can header files be found for the code being built
# library paths - where are libraries located that executalbe target build against

include_directories(
 include
 ${catkin_INCLUDE_DIRS}
 ${ELMO_PKGS_DIR}/include/ethercat/osal
 ${ELMO_PKGS_DIR}/include/ethercat/oshw
 ${ELMO_PKGS_DIR}/include/ethercat/soem
 /usr/xenomai/include/cobalt
 /usr/xenomai/include/
 /usr/xenomai/include/alchemy
 /usr/xenomai/lib
 /usr/xenomai/
)

# Xenomai setting
#execute_process(COMMAND /usr/xenomai/bin/xeno-config --skin=alchemy --cflags OUTPUT_VARIABLE XENO_CFLAGS)
#execute_process(COMMAND /usr/xenomai/bin/xeno-config --skin=alchemy --ldflags OUTPUT_VARIABLE XENO_LDFLAGS)

#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++11 -lefence ${XENO_CFLAGS}")
#string(STRIP ${CMAKE_CXX_FLAGS} CMAKE_CXX_FLAGS)
#SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--wrap=main -Wl,--no-as-needed -Wl,@/usr/xenomai/lib/modechk.wrappers -lalchemy -lcopperplate /usr/xenomai/lib/xenomai/bootstrap.o -Wl,--dynamic-list=/usr/xenomai/lib/dynlist.ld -L/usr/xenomai/lib -lcobalt -lmodechk -lpthread -lrt")
## Xenomai Setting end

# To Set executable file's location to ${PROJECT_SOURCE_DIR}/bin.
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)

# To specify an executable target that must be buillt.
#message("A")
#message(${ELMO_PKGS_DIR})
#message(${PROJECT_SOURCE_DIR})
#message(${CMAKE_CURRENT_SOURCE_DIR})

add_executable(soem_test_exe ${SRC_FILES})

target_link_libraries(soem_test_exe ${catkin_LIBRARIES})

